# Generated by Django 2.1.1 on 2018-11-27 05:12

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.SmallIntegerField(choices=[(1, 'member'), (2, 'manager')], default=1, verbose_name='user type')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
                'swappable': 'AUTH_USER_MODEL',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=42, verbose_name='Group Name')),
                ('detail', models.TextField(blank=True, default='Nothing for this project...', verbose_name='Group detail')),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='manager')),
                ('members', models.ManyToManyField(related_name='added_groups', to=settings.AUTH_USER_MODEL, verbose_name='team member')),
            ],
            options={
                'ordering': ('create_date',),
            },
        ),
        migrations.CreateModel(
            name='GroupProject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Group name')),
                ('status', models.SmallIntegerField(choices=[(1, 'Creating'), (2, 'Finished'), (3, 'ONGONING')], default=1, verbose_name='Group Status')),
                ('detail', models.TextField(blank=True, default='Nothing for this project...', verbose_name='Project detail')),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('estimate_time', models.IntegerField(blank=True, default=0, null=True)),
                ('start_date', models.DateTimeField(blank=True, default=None, null=True, verbose_name='Start Time')),
                ('finish_date', models.DateTimeField(blank=True, default=None, null=True, verbose_name='End Time')),
                ('spend_time', models.FloatField(blank=True, default=0, null=True)),
                ('deadline', models.DateTimeField(blank=True, default=None, null=True, verbose_name='Deadline')),
                ('is_begin', models.BooleanField(default=False)),
                ('belong', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='timer.Group', verbose_name='Group project')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='my_project', to=settings.AUTH_USER_MODEL, verbose_name='leader')),
                ('members', models.ManyToManyField(related_name='added_groupprojects', to=settings.AUTH_USER_MODEL, verbose_name='team member')),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Invite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('join_id', models.IntegerField()),
                ('is_group', models.BooleanField(default=True)),
                ('is_join', models.BooleanField(default=True)),
                ('status', models.SmallIntegerField(choices=[(4, 'ACCEPT'), (5, 'REJECT'), (6, 'INIT')], default=6, verbose_name='Invite Status')),
                ('manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='manager', to=settings.AUTH_USER_MODEL)),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='member', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Progress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('begin_time', models.DateTimeField(blank=True, default=None, null=True, verbose_name='Begin Time')),
                ('progress', models.FloatField(blank=True, default=0, verbose_name='Progress')),
                ('date', models.DateTimeField(blank=True, default=None, verbose_name='Date')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='timer.GroupProject', verbose_name='Group project')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
